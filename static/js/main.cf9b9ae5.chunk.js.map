{"version":3,"sources":["services/apiPixabay.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","App.js","index.js"],"names":["getFetch","query","page","perPage","key","axios","get","then","response","data","hits","Searchbar","state","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","placeholder","onChange","Component","ImageGalleryItem","id","webformatURL","tags","src","alt","ImageGallery","gallery","map","Button","onClick","App","sQuery","isLoading","error","scroll","onChangeQuery","fetchHits","options","console","log","prevState","catch","finally","loadMoreButton","prevProps","window","scrollTo","top","document","documentElement","scrollHeight","behavior","shouldRenderLoadMoreButton","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cf9b9ae5.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n// async function getFetch(query, page, perPage) {\r\n//   let key = `20004677-e0c621e42f0d912e7de39a0de`;\r\n\r\n//   axios.defaults.baseURL = `https://pixabay.com/api/`;\r\n//   axios.defaults.headers.common['Authorization'] = key;\r\n//   let url = `?image_type=photo&orientation=horizontal&q=${query}&page=${page}&per_page=${perPage}&key=${key}`;\r\n\r\n//   const response = await axios.get(url);\r\n//   const data = await response.data;\r\n//   const result = await data.hits;\r\n\r\n//   return result;\r\n// }\r\n\r\n// export default { getFetch };\r\n// let key = `20004677-e0c621e42f0d912e7de39a0de`;\r\n// axios.defaults.headers.common['Authorization'] = key;\r\n// axios.defaults.baseURL = `https://pixabay.com/api/`;\r\n\r\nconst getFetch = (query, page, perPage = 12) => {\r\n  let key = `20004677-e0c621e42f0d912e7de39a0de`;\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?key=${key}&q=${query}&image_type=photo&per_page=${perPage}&page=${page}`,\r\n    )\r\n    .then(response => response.data.hits);\r\n};\r\n\r\nexport { getFetch as default };\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    query: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ query: e.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.query);\r\n    this.setState({ query: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            // autocomplete=\"off\"\r\n            // autofocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.query}\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n\r\nSearchbar.propTypes = { onSubmit: PropTypes.func };\r\n","import React from 'react';\r\n\r\nconst ImageGalleryItem = ({ id, webformatURL, tags }) => (\r\n  <>\r\n    <li key={id} className=\"ImageGalleryItem\">\r\n      <img src={webformatURL} alt={tags} className=\"ImageGalleryItem-image\" />\r\n    </li>\r\n  </>\r\n);\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\n\r\nconst ImageGallery = ({ gallery }) => (\r\n  <ul className=\"ImageGallery\">\r\n    {gallery.map(({ id, webformatURL, tags }) => (\r\n      <ImageGalleryItem key={id} webformatURL={webformatURL} tags={tags} />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default ImageGallery;\r\n","import React, { Component } from 'react';\r\n\r\nclass Button extends Component {\r\n  render() {\r\n    return (\r\n      <button className=\"Button\" type=\"button\" onClick={this.props.onClick}>\r\n        Load more\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\nimport getFetch from './services/apiPixabay';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\n\nclass App extends Component {\n  state = {\n    sQuery: '',\n    page: 1,\n    perPage: 12,\n    gallery: [],\n    isLoading: false,\n    error: null,\n    scroll: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.sQuery !== this.state.sQuery) {\n      this.fetchHits();\n    }\n    if (this.state.scroll === true) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  onChangeQuery = query => {\n    this.setState({\n      sQuery: query,\n      page: 1,\n      gallery: [],\n      error: null,\n    });\n  };\n\n  fetchHits = () => {\n    const { page, sQuery, perPage } = this.state;\n    const options = { sQuery, page, perPage };\n\n    this.setState({ isLoading: true });\n\n    getFetch(options)\n      .then(gallery => {\n        console.log(gallery);\n        this.setState(prevState => ({\n          gallery: [...prevState.gallery, ...gallery],\n          page: prevState.page + 1,\n        }));\n      })\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  loadMoreButton = () => {\n    this.fetchHits();\n    if (this.state.page > 1) {\n      this.setState({ scroll: true });\n    }\n  };\n\n  render() {\n    const { gallery, isLoading } = this.state;\n    const shouldRenderLoadMoreButton = gallery.length > 0 && !isLoading;\n    return (\n      <>\n        <Searchbar onSubmit={this.onChangeQuery} />\n        <ImageGallery gallery={gallery} />\n        {shouldRenderLoadMoreButton && <Button onClick={this.loadMoreButton} />}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}